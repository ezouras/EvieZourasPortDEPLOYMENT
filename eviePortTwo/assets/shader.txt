precision highp float;

	varying vec2 fragCoord;
	uniform vec3 iResolution;
	uniform float iGlobalTime;

	uniform float time;
	uniform vec2 mouse;
	uniform vec2 resolution;

	void main () {
	    vec2 uv = -1.0 + 2.0*fragCoord.xy / iResolution.xy;
	    uv.x *=  iResolution.x / iResolution.y;
	    // background
	    vec3 color = vec3(0.0);
	    const float fRadius = 0.05;
	    const int iBubles = 64;
	    // bubbles
	    for (int i=0; i < iBubles; i++) {
	        // bubble seeds
	        float pha = tan(float(i)*6.+1.0)*0.5 + 0.5;
	        float siz = pow( cos(float(i)*2.4+5.0)*0.5 + 0.5, 4.0 );
	        float pox = cos(float(i)*3.55+4.1) * iResolution.x / iResolution.y;
	        // buble size, position and color
	        float rad = fRadius + sin(float(i))*0.12+0.08;
	        vec2  pos = vec2( pox+sin(iGlobalTime/15.+pha+siz), -1.0-rad + (2.0+2.0*rad)
	                         *mod(pha+0.1*(iGlobalTime/5.)*(0.2+0.8*siz),1.0)) * vec2(1.0, 1.0);
	        float dis = length( uv - pos );
	        vec3  col = mix( vec3(0.1, 0.2, 0.8), vec3(0.2,0.8,0.6), 0.5+0.5*sin(float(i)*sin(iGlobalTime*pox*0.03)+1.9));
	        // render
	        color += col.xyz *(1.- smoothstep( rad*(0.65+0.20*sin(pox*iGlobalTime)), rad, dis )) * (1.0 - cos(pox*iGlobalTime));
	    }
	    // vigneting
	    color *= sqrt(1.5-0.5*length(uv));
	    gl_FragColor = vec4(color,1.0);
	}
